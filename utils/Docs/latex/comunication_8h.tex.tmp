\hypertarget{comunication_8h}{}\doxysection{utils/include/comunication.h File Reference}
\label{comunication_8h}\index{utils/include/comunication.h@{utils/include/comunication.h}}


Handles the comunication between the server and the client using Multithreading.  


{\ttfamily \#include $<$stdio.\+h$>$}\newline
{\ttfamily \#include $<$stdlib.\+h$>$}\newline
{\ttfamily \#include $<$commons/log.\+h$>$}\newline
{\ttfamily \#include $<$inttypes.\+h$>$}\newline
{\ttfamily \#include $<$pthread.\+h$>$}\newline
{\ttfamily \#include \char`\"{}protocol.\+h\char`\"{}}\newline
{\ttfamily \#include \char`\"{}sockets.\+h\char`\"{}}\newline
{\ttfamily \#include \char`\"{}opcode.\+h\char`\"{}}\newline
Include dependency graph for comunication.\+h\+:
% FIG 0
This graph shows which files directly or indirectly include this file\+:
% FIG 1
\doxysubsection*{Data Structures}
\begin{DoxyCompactItemize}
\item 
struct \mbox{\hyperlink{structt__process__conection__args}{t\+\_\+process\+\_\+conection\+\_\+args}}
\begin{DoxyCompactList}\small\item\em Struct to pass arguments to the process\+\_\+conection function. \end{DoxyCompactList}\end{DoxyCompactItemize}
\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
int \mbox{\hyperlink{comunication_8h_a9e4b846374834ff6c5ded005c0b99360}{server\+\_\+listen}} (t\+\_\+log $\ast$logger, const char $\ast$server\+\_\+name, int server\+\_\+socket)
\begin{DoxyCompactList}\small\item\em Make the server listen in Multithreading, uses process\+\_\+conection function. \end{DoxyCompactList}\end{DoxyCompactItemize}


\doxysubsection{Detailed Description}
Handles the comunication between the server and the client using Multithreading. 

\begin{DoxyAuthor}{Author}
Kernel\+Crafters 
\end{DoxyAuthor}
\begin{DoxyVersion}{Version}
1.\+0 
\end{DoxyVersion}
\begin{DoxyDate}{Date}
2024-\/04-\/18
\end{DoxyDate}
\begin{DoxyCopyright}{Copyright}
Copyright (c) 2024 
\end{DoxyCopyright}


\doxysubsection{Function Documentation}
\mbox{\Hypertarget{comunication_8h_a9e4b846374834ff6c5ded005c0b99360}\label{comunication_8h_a9e4b846374834ff6c5ded005c0b99360}} 
\index{comunication.h@{comunication.h}!server\_listen@{server\_listen}}
\index{server\_listen@{server\_listen}!comunication.h@{comunication.h}}
\doxysubsubsection{\texorpdfstring{server\_listen()}{server\_listen()}}
{\footnotesize\ttfamily int server\+\_\+listen (\begin{DoxyParamCaption}\item[{t\+\_\+log $\ast$}]{logger,  }\item[{const char $\ast$}]{server\+\_\+name,  }\item[{int}]{server\+\_\+socket }\end{DoxyParamCaption})}



Make the server listen in Multithreading, uses process\+\_\+conection function. 


\begin{DoxyParams}{Parameters}
{\em logger} & logger from commons library \\
\hline
{\em server\+\_\+name} & Name of the server \\
\hline
{\em server\+\_\+socket} & server socket to listen \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
int 
\end{DoxyReturn}
